#include <iostream>
#include <string>
#include <vector>
#include <fstream>
#include "roster.h"
#include "student.h"
#include "degree.h"
using namespace std;

int main() {
	cout << "C867-Scripting & Programming: Applications" << endl << "Language: C++" << endl << "Student ID: 011051427" << endl << "Name: Rachel Fleming" << endl << endl;
	const string studentData[5] =
	{ "A1,John,Smith,John1989@gm ail.com,20,30,35,40,SECURITY",
	"A2,Suzan,Erickson,Erickson_1990@gmailcom,19,50,30,40,NETWORK",
	"A3,Jack,Napoli,The_lawyer99yahoo.com,19,20,40,33,SOFTWARE",
	"A4,Erin,Black,Erin.black@comcast.net,22,50,58,40,SECURITY",
	"A5,Rachel,Fleming,rflem54@wgu.edu,24,19,30,25,SOFTWARE"
	};

	const int numStudent = 5;
	Roster classRoster;

	cout << "Displaying all students: " << endl;
	for (int i = 0; i < numStudent; i++) {
		classRoster.parse(studentData[i]);
	};
	 

	classRoster.printAll();

	
	return 0;
}

	/*
	cout << "Displaying students with Invalid emails: " << endl;
	classRoster.printInvalidEmail();
	cout << endl;

	cout << "Displaying average days: " << endl;
	for (int i = 0; i < 5; i++) {
		classRoster.printAvgDays(classRoster.classRosterArray[i]->GetId());
	};

	classRoster.printByDegree(SOFTWARE);

	classRoster.removeId("A3");
	cout << endl;
	classRoster.printAll();
	cout << endl;
	classRoster.removeId("A3");
	cout << endl;

	
	//should print no such student exists
	//now implement the destructor to release the memory that was allocated dynamically in roster

	
	return 0;

